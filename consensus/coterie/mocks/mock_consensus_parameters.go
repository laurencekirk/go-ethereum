// Code generated by MockGen. DO NOT EDIT.
// Source: consensus_parameters.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockConsensusParameters is a mock of ConsensusParameters interface
type MockConsensusParameters struct {
	ctrl     *gomock.Controller
	recorder *MockConsensusParametersMockRecorder
}

// MockConsensusParametersMockRecorder is the mock recorder for MockConsensusParameters
type MockConsensusParametersMockRecorder struct {
	mock *MockConsensusParameters
}

// NewMockConsensusParameters creates a new mock instance
func NewMockConsensusParameters(ctrl *gomock.Controller) *MockConsensusParameters {
	mock := &MockConsensusParameters{ctrl: ctrl}
	mock.recorder = &MockConsensusParametersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockConsensusParameters) EXPECT() *MockConsensusParametersMockRecorder {
	return m.recorder
}

// GetTargetCommitteeSize mocks base method
func (m *MockConsensusParameters) GetTargetCommitteeSize() (uint, error) {
	ret := m.ctrl.Call(m, "GetTargetCommitteeSize")
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTargetCommitteeSize indicates an expected call of GetTargetCommitteeSize
func (mr *MockConsensusParametersMockRecorder) GetTargetCommitteeSize() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTargetCommitteeSize", reflect.TypeOf((*MockConsensusParameters)(nil).GetTargetCommitteeSize))
}
